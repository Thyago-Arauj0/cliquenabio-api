name: Django CI/CD

on: 
    push:
        branches:
            - main
            - dev

jobs:
    build:
        runs-on: ubuntu-latest
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
          FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
          FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
          FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}
          GOOGLE_OAUTH_CALLBACK_URL: ${{ secrets.GOOGLE_OAUTH_CALLBACK_URL }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          PLAN_LIVE_CONEXAO_PROD_ID: ${{ secrets.PLAN_LIVE_CONEXAO_PROD_ID }}
          PLAN_LIVE_INFLUENCIA_PROD_ID: ${{ secrets.PLAN_LIVE_INFLUENCIA_PROD_ID }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          STRIPE_ENDPOINT_SECRET: ${{ secrets.STRIPE_ENDPOINT_SECRET }}
          STRIPE_LIVE_PUBLIC_KEY: ${{ secrets.STRIPE_LIVE_PUBLIC_KEY }}
          STRIPE_LIVE_SECRET_KEY: ${{ secrets.STRIPE_LIVE_SECRET_KEY }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Set up Python v3.12
              uses: actions/setup-python@v3
              with:
                python-version: 3.12

            - name: Install Dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Run Tests
              run: |
                python manage.py test
    deploy:

        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Install Vercel CLI
              run: npm install -g vercel

            - name: Deploy to Vercel
              run: |
                vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --confirm

